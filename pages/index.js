import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Link from 'next/link';
import data from '../data.json'
import { useState } from 'react';
import Sidebar from '../components/sidebar';

export default function Home() {
  const [sidebarOpened, setSidebarOpened] = useState(false)
  const [selectedBoard, setSelectedBoard] = useState("Empty")
  console.log(data.boards.filter((board) => board.name === selectedBoard)[0].columns);
  return (
    <div className={styles.container}>
      <Head>
        <title>Kanban</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/assets/favicon-32x32.png" />
      </Head>
      <header>
        <div className={sidebarOpened? styles.header_active:styles.header}>
          <img className={styles.logo} src="/assets/logo-dark.svg" alt="logo" />
          <hr className={styles.divider}/>
          <div className={styles.title}>Product launch</div>
        </div>
        <div className={styles.header}>
        <button className={styles.add_new_task}>+ Add New Task</button>
        <div className={styles.features_btn}><div className={styles.circle}></div><div className={styles.circle}></div><div className={styles.circle}></div></div>
        </div>
      </header>
      {data.boards.filter((board) => board.name === selectedBoard)[0].columns.length > 0?
      <main>
        
        <div className={styles.col}>
          <div className={styles.subtitle}><div className={styles.todo_circle}></div>TODO ({data.boards.filter((board) => board.name === selectedBoard)[0].columns.filter((col) => col.name === 'Todo')[0].tasks.length})</div>
          <div className={styles.content}>
            {data.boards.filter((board) => board.name === selectedBoard)[0].columns.filter((col) => col.name === 'Todo')[0].tasks.map((task) => (
            <div className={styles.todo}>
              <div className={styles.task_title}>{task.title}</div>
              <div className={styles.task_subtitle}>{task.subtasks.filter((subtask) => subtask.isCompleted === true).length} of {task.subtasks.length} subtasks</div>
            </div>
            ))}
          </div>
        </div>
        <div className={styles.col}>
          <div className={styles.subtitle}><div className={styles.todo_circle}></div>DOING ({data.boards.filter((board) => board.name === selectedBoard)[0].columns.filter((col) => col.name === 'Doing')[0].tasks.length})</div>
          <div className={styles.content}>
            {data.boards.filter((board) => board.name === selectedBoard)[0].columns.filter((col) => col.name === 'Doing')[0].tasks.map((task) => (
            <div className={styles.todo}>
              <div className={styles.task_title}>{task.title}</div>
              <div className={styles.task_subtitle}>{task.subtasks.filter((subtask) => subtask.isCompleted === true).length} of {task.subtasks.length} subtasks</div>
            </div>
            ))}
          </div>
        </div>
        <div className={styles.col}>
          <div className={styles.subtitle}><div className={styles.todo_circle}></div>DONE ({data.boards.filter((board) => board.name === selectedBoard)[0].columns.filter((col) => col.name === 'Done')[0].tasks.length})</div>
          <div className={styles.content}>
            {data.boards.filter((board) => board.name === selectedBoard)[0].columns.filter((col) => col.name === 'Done')[0].tasks.map((task) => (
            <div className={styles.todo}>
              <div className={styles.task_title}>{task.title}</div>
              <div className={styles.task_subtitle}>{task.subtasks.filter((subtask) => subtask.isCompleted === true).length} of {task.subtasks.length} subtasks</div>
            </div>
            ))}
          </div>
        </div>
        <div className={styles.newcolumn}>+ New Column</div>
        
      </main>
      :<div className={sidebarOpened ? styles.empty_active : styles.empty}>
        <div className={styles.empty_title}>This board is empty. Create a new column to get started.</div>
        <button className={styles.add_new_task}>+ Add New Task</button>

        <div className={styles.nav}>
        <div className={sidebarOpened ? styles.toggle_active : styles.toggle} onClick={() => setSidebarOpened(!sidebarOpened)}>
          {sidebarOpened ? <div><img src="/assets/icon-hide-sidebar.svg" alt="hide" />Hide Sidebar</div> : <div><img src="/assets/icon-show-sidebar.svg" alt="show" /></div>}
        </div>
        <Sidebar data={data} sidebarOpened={sidebarOpened}/>
        </div>
              
        </div>}
      
        
        {/* <div className={sidebarOpened ? styles.nav_menu_active : styles.nav_menu}>
          <div className={styles.subtitle}>ALL BOARDS ({data.boards.length})</div>
          {data.boards.map((board) =><div key={board.name}><img src="/assets/icon-board.svg" alt="board" />{board.name}</div>)}
          <div><img src="/assets/icon-board.svg" alt="board" />+ Create New Board</div>
        </div> */}
      
    </div>
  )
}
